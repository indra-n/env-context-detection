import numpy as np
import pandas as pd
import pickle
import matplotlib.pyplot as plt


with open('..\saves\\exp_train_trim_1.pickle', 'rb') as f:
    train_df = pickle.load(f)

with open('..\saves\\exp_test_trim_1.pickle', 'rb') as f:
    test_df = pickle.load(f)

train_data = train_df
test_data = test_df


indoor = train_data[train_data['true_class'] == 1]
inter = train_data[train_data['true_class'] == 2]
urban = train_data[train_data['true_class'] == 3]
open_sky = train_data[train_data['true_class'] == 4]

print(indoor.shape)
print(inter.shape)
print(urban.shape)
print(open_sky.shape)

average_indoor = indoor.groupby(['e_id'], axis=0, as_index=False).mean()
average_inter = inter.groupby(['e_id'], axis=0, as_index=False).mean()
average_urban = urban.groupby(['e_id'], axis=0, as_index=False).mean()
average_open = open_sky.groupby(['e_id'], axis=0, as_index=False).mean()

plt.figure(1)
plt.xlabel('Time in seconds', fontsize=8)
plt.ylabel('Number of satellites with C/N0 over 25 bB-Hz', fontsize=8)
plt.plot(average_indoor['e_id'], average_indoor['num_sat_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['num_sat_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['num_sat_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['num_sat_25'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend()
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 20])
# plt.show()
plt.xlim([0, 250])

plt.figure(2)
plt.xlabel('Time in seconds', fontsize=8)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=8)
plt.plot(average_indoor['e_id'], average_indoor['sum_snr_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_snr_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_snr_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_snr_25'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=7)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 600])
plt.xlim([0, 250])

plt.figure(3)
plt.xlabel('Time in seconds', fontsize=8)
plt.ylabel('Number of satellites', fontsize=8)
plt.plot(average_indoor['e_id'], average_indoor['num_sat'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['num_sat'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['num_sat'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['num_sat'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=4)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 20])
plt.xlim([0, 250])

plt.figure(4)
plt.xlabel('Time in seconds', fontsize=8)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=8)
plt.plot(average_indoor['e_id'], average_indoor['sum_snr'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_snr'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_snr'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_snr'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 300])
plt.xlim([0, 250])


plt.figure(5)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Number of satellites with C/N0 over 25 bB-Hz', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['elev_60_90_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['elev_60_90_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['elev_60_90_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['elev_60_90_25'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 5])
plt.xlim([0, 250])

plt.figure(6)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['sum_elev_60_90_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_elev_60_90_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_elev_60_90_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_elev_60_90_25'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
plt.xlim([0, 250])

plt.figure(7)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Number of satellites with C/N0 over 25 bB-Hz', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['elev_0_30_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['elev_0_30_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['elev_0_30_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['elev_0_30_25'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 5])
plt.xlim([0, 250])

plt.figure(8)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['sum_elev_0_30_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_elev_0_30_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_elev_0_30_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_elev_0_30_25'], label="open", c='y')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 150])
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
plt.xlim([0, 250])

plt.figure(9)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Number of satellites with C/N0 over 25 bB-Hz', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['elev_30_60_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['elev_30_60_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['elev_30_60_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['elev_30_60_25'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 5])
plt.xlim([0, 250])

plt.figure(10)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['sum_elev_30_60_25'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_elev_30_60_25'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_elev_30_60_25'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_elev_30_60_25'], label="open", c='y')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
plt.xlim([0, 250])
# plt.axis([0, 350, 0, 150])
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')


plt.figure(11)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Number of satellites', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['elev_60_90'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['elev_60_90'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['elev_60_90'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['elev_60_90'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 5])
plt.xlim([0, 250])

plt.figure(12)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['sum_elev_60_90'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_elev_60_90'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_elev_60_90'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_elev_60_90'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
plt.xlim([0, 250])

plt.figure(13)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Number of satellites', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['elev_0_30'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['elev_0_30'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['elev_0_30'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['elev_0_30'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=4)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 5])
plt.xlim([0, 250])

plt.figure(14)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['sum_elev_0_30'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_elev_0_30'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_elev_0_30'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_elev_0_30'], label="open", c='y')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 150])
plt.xlim([0, 250])
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')

plt.figure(15)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Number of satellites', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['elev_30_60'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['elev_30_60'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['elev_30_60'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['elev_30_60'], label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=4)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 5])
plt.xlim([0, 250])

plt.figure(16)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=10)
plt.plot(average_indoor['e_id'], average_indoor['sum_elev_30_60'], label="indoor", c='r')
plt.plot(average_inter['e_id'], average_inter['sum_elev_30_60'], label="inter", c='b')
plt.plot(average_urban['e_id'], average_urban['sum_elev_30_60'], label="urban", c='g')
plt.plot(average_open['e_id'], average_open['sum_elev_30_60'], label="open", c='y')
# plt.grid(True)
plt.legend(loc=4)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
# plt.axis([0, 350, 0, 150])
plt.xlim([0, 250])
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')

plt.figure(17)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Number of satellites with C/N0 under 25 bB-Hz', fontsize=10)
plt.plot(average_indoor['e_id'], (average_indoor['num_sat'] - average_indoor['num_sat_25']), label="indoor", c='r')
plt.plot(average_inter['e_id'], (average_inter['num_sat'] - average_inter['num_sat_25']), label="inter", c='b')
plt.plot(average_urban['e_id'], (average_urban['num_sat'] - average_urban['num_sat_25']), label="urban", c='g')
plt.plot(average_open['e_id'], (average_open['num_sat'] - average_open['num_sat_25']), label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=1)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
#plt.axis([0, 350, 0, 20])
plt.xlim([0, 250])

plt.figure(18)
plt.xlabel('Time in seconds', fontsize=10)
plt.ylabel('Sum of C/N0 (dB-Hz)', fontsize=10)
plt.plot(average_indoor['e_id'], (average_indoor['sum_snr'] - average_indoor['sum_snr_25']), label="indoor", c='r')
plt.plot(average_inter['e_id'], (average_inter['sum_snr'] - average_inter['sum_snr_25']), label="inter", c='b')
plt.plot(average_urban['e_id'], (average_urban['sum_snr'] - average_urban['sum_snr_25']), label="urban", c='g')
plt.plot(average_open['e_id'], (average_open['sum_snr'] - average_open['sum_snr_25']), label="open", c='y')
# plt.grid(True, which='minor', linestyle=':', linewidth='0.5')
# plt.grid(True)
plt.legend(loc=4)
# plt.tick_params(which='minor', top='off', left='off', right='off', bottom='off')
# plt.minorticks_on()
#plt.axis([0, 250, 0, 300])
plt.xlim([0, 250])

plt.show()
